import aiogram
from aiogram import *
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
import asyncio
from aiogram.utils.markdown import hide_link
import markups
from aiogram.dispatcher.filters import Command
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import *
storage = MemoryStorage()
bot = Bot('TOKEN', parse_mode='html')
dp = Dispatcher(bot, storage=storage)


admin_id = [ID, ID, ID]
group_id = -ID


name_enter = {}
phone_enter = {}
massive_names = {}
text_m = {}
msg = {}



class text_post_message(StatesGroup):
	text = State()
	button_name = State()
	button_link = State()

text_post_message_static = {}



class media_post_message(StatesGroup):
	text = State()
	photo_id = State()
	button_name = State()
	button_link = State()

media_post_message_static = {}


newssender_state = True
	
#========================= START COMMAND =========================
@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
	text_start = f"{hide_link('https://telegra.ph/file/1d13c87f36b2654eae2dd.png')}–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name}</b> !\n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –∫—É—Ä—Å–æ–≤ –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞ –æ—Ç <b>DeutschExperte</b>.\n\n–ö–æ–≥–æ –º—ã –∂–¥–µ–º –Ω–∞ –Ω–∞—à–µ–º –∫—É—Ä—Å–µ?üó£\n\n–ú—ã –∂–¥–µ–º –≤—Å–µ—Ö, –¥–ª—è –∫–æ–≥–æ –ì–µ—Ä–º–∞–Ω–∏—è –∏ –µ–µ —è–∑—ã–∫ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ñ–æ–∫—É—Å–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ - —Ç–µ—Ö, –∫—Ç–æ –Ω–∞—Ü–µ–ª–µ–Ω –Ω–∞ –±–∏–∑–Ω–µ—Å —Å –Ω–µ–º–µ—Ü–∫–∏–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏, –Ω–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å–æ —Å—Ç—Ä–∞–Ω–æ–π, –Ω–∞ —É—á—ë–±—É/—Ä–∞–±–æ—Ç—É –≤ –ì–µ—Ä–º–∞–Ω–∏–∏ ‚Äì –∏ —à–∏—Ä–æ–∫–∏–π –∫—Ä—É–≥ –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã—Ö, –∂–µ–ª–∞—é—â–∏—Ö —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö –∏ —É—á–µ–±–µ, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ —É—á–∏—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —É–≥–ª—É–±–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ –Ω–µ–º–µ—Ü–∫–æ–º—É —è–∑—ã–∫—É.\n\n<b>–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</b>\nüìò <a href='https://www.facebook.com/Deutschexpert'>Facebook</a>\nüìû <a href='https://api.whatsapp.com/send?phone=998935905905'>WhatsApp</a>\nüì©gennadiy.gerasimov@dbaconsulting.co"
	if message.chat.id in admin_id:
		await message.answer(text_start, reply_markup=markups.start_admin_kb)
	else:
		await message.answer(text_start, reply_markup=markups.start_kb)
	file = open('id_base.txt', 'r+')
	text = file.read()
	if str(message.chat.id) not in text:
		for i in admin_id:
			await bot.send_message(i, f"<b>–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è:</b>\n{str(message.chat.id)}, –≤–ø–µ—Ä–≤—ã–µ –∑–∞—à–µ–ª –≤ –±–æ—Ç–∞!")
		print(str(message.chat.id) + ', –≤–ø–µ—Ä–≤—ã–µ –∑–∞—à–µ–ª –≤ –±–æ—Ç–∞!')
		file.write('\n' + str(message.chat.id))
		file.close()

#================================================================










#==== –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò ====
@dp.message_handler(commands=['clear'])
async def command_clear(message: types.Message):
	open('id_active.txt','w+').close()
	await message.answer('–ë–∞–∑–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—á–∏—â–∏–Ω–∞!')
#==== ==== ==== ==== ====













@dp.message_handler(content_types=['photo'])
async def rassilka(message: types.Message):
    global back_date, days, link2, check
    try:
        #---------------
        #–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –±–µ–∑ –∫–Ω–æ–ø–∫–∏
        if message.from_user.id in admin_id and '–ö–Ω–æ–ø–∫–∞' not in message.caption:
            await bot.send_message(message.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ! –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞.')
            file_info = await bot.get_file(message.photo[2].file_id)
            downloaded_file = await bot.download_file(file_info.file_path)
            with open('rassilka.jpg', 'wb') as new_file:
                new_file.write(downloaded_file.getvalue())
            baza = open('id_base.txt', 'r')
            text = baza.readlines()
            await bot.send_message(message.chat.id, '–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º: ' + text[i])
            for i in range(len(text)):
                try:
                    src = open('rassilka.jpg', 'rb')
                    await bot.send_photo(text[i], photo=src, caption=message.caption)
                    print('–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ' + text[i])
                except:
                    pass
            baza.close()
        #---------------
        #–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å –∫–Ω–æ–ø–∫–æ–π
        elif message.from_user.id in admin_id and '–ö–Ω–æ–ø–∫–∞' in message.caption:
            x = message.caption.split('–ö–Ω–æ–ø–∫–∞')
            name = x[1].split('–ù–∞–∑–≤–∞–Ω–∏–µ')
            m = InlineKeyboardMarkup(row_width=1)
            button2 = KeyboardButton(text=name[1], url=name[0])
            m.add(button2)
            await bot.send_message(message.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ! –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞.')
            file_info = await bot.get_file(message.photo[2].file_id)
            downloaded_file = await bot.download_file(file_info.file_path)
            with open('rassilka.jpg', 'wb') as new_file:
                new_file.write(downloaded_file.getvalue())
            baza = open('id_base.txt', 'r')
            text = baza.readlines()
            for i in range(len(text)):
                try:
                    src = open('rassilka.jpg', 'rb')
                    await bot.send_photo(text[i], photo=src, caption=f"{x[0]}", reply_markup=m)
                    await bot.send_message(message.chat.id, '–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ' + text[i])
                    print('–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ' + text[i])
                except:
                    pass
            baza.close()
    except:
        await message.answer('–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏! –í–æ–∑–º–æ–∂–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã –∏–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ!')        

        

		
		
		
		
		

@dp.message_handler(content_types=['text'])
async def text_message(message: types.Message):
	#---------------
	#–ò–Ω—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é
	file = open('id_active.txt', 'r+')
	text = file.read()
	#---------------
	#–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	if str(message.chat.id) not in text:
		for i in admin_id:
			await bot.send_message(i, f"<b>–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è:</b>\n{str(message.chat.id)}, —Å—Ç–∞–ª –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!")
		print(str(message.chat.id) + ', —Å—Ç–∞–ª –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!')
		file.write('\n' + str(message.chat.id))
		file.close()
	if message.text == 'üíª–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ºüíª':
		text_m[message.from_user.id] = True
		await message.answer('<b>–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</b>üì©')
		return
	#---------------
	#–ó–∞–ø—Ä–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Å—ã–ª–æ–∫ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é
	#elif text_m[message.from_user.id] == True  and 'http' in message.text:
		#await message.answer('–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É!')
		#text_m[message.from_user.id] = False
		#return
	#---------------
	#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é
	try:
		if text_m[message.from_user.id] == True:
			for i in admin_id:
				await bot.send_message(i, f"<code>{str(message.chat.id)}@</code> {message.text}\n\n<b>–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è, –∑–∞—Ç–µ–º –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.</b>")
			text_m[message.from_user.id] = False
			if message.from_user.id in admin_id:
				await message.answer('–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—èüìß', reply_markup=markups.start_admin_kb)
			else:
				await message.answer('–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—èüìß', reply_markup=markups.start_kb)
			
			return
	except:
		pass
	#---------------
	#–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ –∞–π–¥–∏
	if '@' in message.text and message.chat.id in admin_id:
		u_id = message.text.split('@')
		await bot.send_message(u_id[0], f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {u_id[1]}\n\n<b>–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º" –∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –æ—Ç–≤–µ—Ç.</b>')
		return
	#---------------
	
	
	
	
	#=================== ADMIN PANEL ===================
	if message.from_user.id in admin_id:
		if message.text == "üôé‚Äç‚ôÇADMINüôé‚Äç‚ôÇ":
			f=open('id_base.txt', 'r')
			all_users = f.readlines()
			f.close()
			f=open('id_active.txt', 'r')
			active_users = f.readlines()
			f.close()
			await message.answer(f"<b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <u>{message.from_user.full_name}({message.from_user.id})</u></b>\n\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(all_users)}üëæ\n–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(active_users)}üëæ", reply_markup=markups.admin_panel)
	if message.text == "üë®‚Äçüíª–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞üë®‚Äçüíª":
		text_message = f"{hide_link('https://telegra.ph/file/49488f221e9b68970f1cb.jpg')}<b>–ì–µ–Ω–Ω–∞–¥–∏–π</b>\n\n–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫—É—Ä—Å–∞ - –≤—ã—Å–æ–∫–æ–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å —É—á–µ–Ω–æ–π —Å—Ç–µ–ø–µ–Ω—å—é Ph.D —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –æ–ø—ã—Ç–æ–º (–æ –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—Ö –∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö –ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ). 30 –ª–µ—Ç —Ä–∞–±–æ—Ç—ã –≤ –Ω–µ–º–µ—Ü–∫–∏—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ö –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è—Ö ‚Äì –Ω–∞—à–∞ –≥–∞—Ä–∞–Ω—Ç–∏—è —É—Å–ø–µ—Ö–∞."
		await message.answer(text_message)
		text_message = f"{hide_link('https://telegra.ph/file/5a98ccad631f5cfc682c3.jpg')}<b>–§—Ä–∞—É –ô–æ–∫–µ—Ä</b>\n\n–°–ø–∏–∫–µ—Ä –∫—É—Ä—Å–∞ ‚Äì –Ω–∞—à —á–µ–ª–æ–≤–µ–∫ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏, –¥–∏–ø–ª–æ–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ–¥–∞–≥–æ–≥ —Å –±–æ–≥–∞—Ç—ã–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏—è—Ö –§–†–ì."
		await message.answer(text_message)
		return
	#=======================================================
	
	#======================= PRICE ========================
	elif message.text == "üìë–ü—Ä–∞–π—Å-–ª–∏—Å—Çüìë":
		text_message = "<b>–¶–µ–Ω—ãüí¥</b>\n–ú—ã –Ω–µ –±–∏–∑–Ω–µ—Å-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç–æ–º —Å–º—ã—Å–ª–µ —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞, –∞ —É—á–µ–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ –∫–ª—É–± –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º, —Ö–æ—Ç—è –≤ –Ω–∞—à–µ –≤—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤ ‚Äì –æ–¥–∏–Ω —Å–ø–æ—Å–æ–±–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.\n\n–ù–∞—à–∏ —Ü–µ–Ω—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏, –∏ –º—ã —Å–æ–≤–º–µ—Å—Ç–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–º –∏—Ö –≤ —Ö–æ–¥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è. –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç –¥–æ—Å—Ç—É–ø –∫ —è–∑—ã–∫–æ–≤–æ–º—É –∫–ª—É–±—É –∏ –≤–Ω–µ–∞—É–¥–∏—Ç–æ—Ä–Ω—ã–º –∑–∞–Ω—è—Ç–∏—è–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ —Å–≤–æ–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≥–∏–±–∫—É—é —Å–∏—Å—Ç–µ–º—É –±–æ–Ω—É—Å–æ–≤ –¥–ª—è –ª—É—á—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ ‚Äì –≤—Å–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—Å!\n–ù–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—ã –∑–∞ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏."
		builder = types.InlineKeyboardMarkup()
		builder.add(types.InlineKeyboardButton(
			text="–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è",
			callback_data="individual_lessons")
				   )
		builder.add(types.InlineKeyboardButton(
			text="–ì—Ä—É–ø–ø–∞ (—Ç—Ä–∏ —á–µ–ª–æ–≤–µ–∫–∞)",
			callback_data="group_lessons")
				   )
		builder.add(types.InlineKeyboardButton(
			text="–î–æ—Å—Ç—É–ø –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–ª—É–±",
			callback_data="club_lessons")
				   )
		await message.answer(text_message, reply_markup=builder)
		return
	#=============================================================
	
	
	#==================== REQUEST START ========================
	if message.text == "‚òéÔ∏è–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫‚òéÔ∏è":
		name_enter[message.chat.id] = True
		await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –ò–º—èüë§")
		return
	try:
		if name_enter[message.chat.id] == True:
			name_enter[message.chat.id] = False
			massive_names[message.chat.id] = message.text
			m = ReplyKeyboardMarkup(resize_keyboard=True)
			button1 = KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç‚úç", request_contact=True)
			m.add(button1)
			await message.answer("–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç‚úç", reply_markup=m)
			phone_enter[message.chat.id] = True
	except:
		pass
	#=============================================================
    

	
	
	
#=================== REQUEST SEND ==================
@dp.message_handler(content_types=['contact'])
async def contact(message):
	global select
	if message.contact is not None and phone_enter[message.chat.id] == True:
		phonenumber = str(message.contact.phone_number)
		m = InlineKeyboardMarkup()
		button1 = KeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å‚úÖ", callback_data=f"ac_{phonenumber}")
		m.add(button1)
		await bot.send_message(chat_id=group_id, text=f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–≤–æ–Ω–æ–∫</b>\n\n–¢–µ–ª–µ—Ñ–æ–Ω: +{phonenumber}\n–ò–º—è: {massive_names[message.chat.id]}\nID: <code>{message.chat.id}</code>", reply_markup=m)
		if message.from_user.id in admin_id:
			await message.answer("<b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º, –æ–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞üìû</b>", reply_markup=markups.start_admin_kb)
		else:
			await message.answer("<b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º, –æ–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞üìû</b>", reply_markup=markups.start_kb)
        
        
#=============================================================        
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
@dp.callback_query_handler()
async def callback_data(call: types.CallbackQuery):
	global list_, msg, newssender_state
	call_data = call.data
	
	#==================== USERS INFORMATION ====================
	if call_data == "clear_acu":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		if call.from_user.id in admin_id:
			open("id_active.txt", "w+").close()
			msg[call.message.chat.id] = await call.message.answer('–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—á–∏—â–µ–Ω.')
			
	elif call_data == "list_active_users":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		if call.from_user.id in admin_id:
			with open('id_active.txt','r') as acu:
				acu_lines = acu.read().split('\n')
				list_ = ""
				for id in acu_lines:
					try:
						chat = await bot.get_chat(id)
						list_ += f"<code>{id}</code> <b>{str(chat.full_name)}</b> - @{str(chat.username)}\n"
					except:
						list_ += f"{id} –Ω–µ –Ω–∞–π–¥–µ–Ω\n"
				msg[call.message.chat.id] = await bot.send_message(call.from_user.id, '–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: \n' + str(list_))
				acu.close()
		return
	
	elif call_data == "list_all_users":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		if call.from_user.id in admin_id:
			with open('id_base.txt','r') as acu:
				all_users_lines = acu.read().split('\n')
				list_ = ""
				for id in all_users_lines:
					try:
						chat = await bot.get_chat(id)
						list_ += f"<code>{id}</code> <b>{str(chat.full_name)}</b> - @{str(chat.username)}\n"
					except:
						list_ += f"{id} –Ω–µ –Ω–∞–π–¥–µ–Ω\n"
				msg[call.message.chat.id] = await bot.send_message(call.from_user.id, '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: \n' + str(list_))
				acu.close()
		return
	
	#=============================================================
	
	
	
	#======================== PRICE ==============================
	elif call_data == "individual_lessons":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		text_message = "–¢–∏–ø: <b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—èüôã‚Äç‚ôÇ</b>\n\n –í–æ –≤—Ä–µ–º—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –æ–±—Å—É–∂–¥–∞—Ç—å —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —É–≥–ª—É–±–ª—è—Ç—å—Å—è –≤ —Ç–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã –¥–ª—è –≤–∞—à–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è.\n\n–¶–µ–Ω–∞ –∑–∞–Ω—è—Ç–∏—è –∑–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π —á–∞—Å: <b>10$</b> üí¥\n–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ –≤–∞–ª—é—Ç–µ —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞."
		msg[call.message.chat.id] = await call.message.answer(text_message)
		return
	
	elif call_data == "group_lessons":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		text_message = "–¢–∏–ø: <b>–ó–∞–Ω—è—Ç–∏—è –≤ –º–∏–Ω–∏-–≥—Ä—É–ø–ø–µ –∏–∑ 3 —á–µ–ª–æ–≤–µ–∫üë•</b>\n\n –í —ç—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∑–∞–Ω—è—Ç–∏–π –≤—ã –±—É–¥–µ—Ç–µ —É—á–∏—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å –¥–≤—É–º—è –¥—Ä—É–≥–∏–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏, —á—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º —É–ª—É—á—à–∏—Ç—å –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏, —É–∑–Ω–∞–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –∏ –¥–µ–ª–∏—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.\n\n–¶–µ–Ω–∞ –∑–∞–Ω—è—Ç–∏—è –∑–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π —á–∞—Å: <b>5$</b> üí¥\n–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ –≤–∞–ª—é—Ç–µ —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞."
		msg[call.message.chat.id] = await call.message.answer(text_message)
		return
	elif call_data == "club_lessons":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		text_message = "–¢–∏–ø: <b>–î–æ—Å—Ç—É–ø –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–ª—É–±üë©‚Äçüè´</b>\n\n –í —Ä–∞–º–∫–∞—Ö —è–∑—ã–∫–æ–≤–æ–≥–æ –∫–ª—É–±–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º —è–∑—ã–∫–µ —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏, –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å —É—Å—Ç–Ω—É—é —Ä–µ—á—å, —É–ª—É—á—à–∞—Ç—å —Å–≤–æ—é –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏ —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å.\n\n–¶–µ–Ω–∞ –∑–∞–Ω—è—Ç–∏—è –∑–∞ –º–µ—Å—è—Ü <b>50$</b> üí¥\n–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ –≤–∞–ª—é—Ç–µ –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª—è."
		msg = await call.message.answer(text_message)
		return
	
	#=============================================================
	
	
	#=========================== CONSTRUCTOR =========================
	elif call_data == "constructor_posts":
		msg[call.message.chat.id] = await call.message.answer('*–≠—Ç–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏üìß\n –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å/—É–¥–∞–ª–∏—Ç—å/—Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ—Å—Ç—ã –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞üßñ‚Äç‚ôÇ\n–§–æ—Ä–º–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤ –§–æ—Ç–æ/–¢–µ–∫—Å—Ç/–ö–Ω–æ–ø–∫–∞üì•*', reply_markup=markups.constructor_posts, parse_mode="MarkdownV2")
	#=================================================================
	
	
	
	#=========================== TEXT POST =========================
	elif call_data == "create_text_post":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		msg[str(call.message.chat.id)+" edit"] = await call.message.answer("–ü–æ–∫–∞ —á—Ç–æ –≤–∞—à —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –ø—É—Å—Ç–æ–π.", reply_markup = markups.text_post)
		
	elif call_data == "add_text_tpost":
		msg[call.message.chat.id] = await call.message.answer("*–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è*\n\n–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —è–∑—ã–∫ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ HTML –ø—Ä–∏–º–µ—Äüí¨: \n\<b\>*–ñ–∏—Ä–Ω—ã–π*\</b\> \n\<i\>_–ö—É—Ä—Å–∏–≤–Ω—ã–π_\</i\> \n\<u\>__–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π__\</u\>", parse_mode="MarkdownV2")
		await text_post_message.text.set()

	elif call_data == "add_button_tpost":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		msg[call.message.chat.id] = await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –ø–æ—Å—Ç–æ–º:")
		await text_post_message.button_name.set()
		
	elif call_data == "start_tpost":
		newssender_state = True
		try:
			m = InlineKeyboardMarkup(row_width=1)
			button2 = KeyboardButton(text=text_post_message_static['button_name'], url=text_post_message_static['button_link'])
			m.add(button2)
		except Exception as e:
			print(str(e))
			if str(e) == "'button_name'":
				await call.message.answer('–í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É.')
		baza = open('id_base.txt', 'r')
		text = baza.readlines()
		msg[str(call.message.chat.id) + ' edit_rassilka'] = await bot.send_message(call.message.chat.id, f'<b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞</b>\n–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: 0/{len(text)}üëæ', reply_markup=markups.stop_newssender)
		for i in range(len(text)):
			try:
				if newssender_state == False:
					await call.message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ !')
					await bot.delete_message(call.message.chat.id, msg[str(call.message.chat.id) + ' edit_rassilka'].message_id)
					return
				await bot.send_message(text[i], text_post_message_static['text'], reply_markup=m)
				await msg[str(call.message.chat.id) + ' edit_rassilka'].edit_text(f'<b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞</b>\n–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {i}/{len(text)}üëæ', reply_markup=markups.stop_newssender)
				print('–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ' + text[i])
			except Exception as e:
				print(e)
				if str(e) == "Can't parse inline keyboard button: text buttons are unallowed in the inline keyboard":
					await bot.send_message(text[i], text_post_message_static['text'])
					await msg[str(call.message.chat.id) + ' edit_rassilka'].edit_text(f'<b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞</b>\n–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {i}/{len(text)}üëæ', reply_markup=markups.stop_newssender)
					print('–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ' + text[i])
				elif "wrong http url" in str(e):
					await call.message.answer('–°—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞‚ùå')
					await bot.delete_message(call.message.chat.id, msg[str(call.message.chat.id) + ' edit_rassilka'].message_id)
					return
				elif "Message text is empty" in str(e):
					await call.message.answer('–¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º‚ùå')
					await bot.delete_message(call.message.chat.id, msg[str(call.message.chat.id) + ' edit_rassilka'].message_id)
					return
				continue
		baza.close()
		text_post_message_static['button_link'] = ""
		text_post_message_static['button_name'] = ""
		text_post_message_static['text'] = ""
	#=============================================================	
		
		
	#=========================== MEDIA POST =========================
	elif call_data == "create_media_post":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		msg[str(call.message.chat.id)+" edit_m"] = await bot.send_photo(call.message.chat.id, photo=InputFile("post.png"), caption="–ü–æ–∫–∞ —á—Ç–æ –≤–∞—à –º–µ–¥–∏–∞ –ø–æ—Å—Ç –ø—É—Å—Ç–æ–π.", reply_markup = markups.media_post)

	elif call_data == "add_text_mpost":
		msg[call.message.chat.id] = await call.message.answer("*–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è*\n\n–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —è–∑—ã–∫ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ HTML –ø—Ä–∏–º–µ—Äüí¨: \n\<b\>*–ñ–∏—Ä–Ω—ã–π*\</b\> \n\<i\>_–ö—É—Ä—Å–∏–≤–Ω—ã–π_\</i\> \n\<u\>__–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π__\</u\>", parse_mode="MarkdownV2")
		await media_post_message.text.set()
	elif call_data == "add_photo":
		msg[call.message.chat.id] = await call.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –≤–∞—à–µ–≥–æ –º–µ–¥–∏–∞ –ø–æ—Å—Ç–∞")
		await media_post_message.photo_id.set()
	elif call_data == "add_button_mpost":
		try:
			await bot.delete_message(call.message.chat.id, msg[call.message.chat.id].message_id)
		except:
			pass
		msg[call.message.chat.id] = await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –ø–æ—Å—Ç–æ–º:")
		await media_post_message.button_name.set()
		
	elif call_data == "start_mpost":
		newssender_state = True
		try:
			await bot.delete_message(call.message.chat.id, msg[str(call.message.chat.id)+" edit_m"].message_id)
		except:
			pass
		try:
			m = InlineKeyboardMarkup(row_width=1)
			button2 = KeyboardButton(text=media_post_message_static['button_name_m'], url=media_post_message_static['button_link_m'])
			m.add(button2)
		except Exception as e:
			print(str(e))
			if str(e) == "'button_name'":
				await call.message.answer('–í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É !')
		baza = open('id_base.txt', 'r')
		text = baza.readlines()
		msg[str(call.message.chat.id) + ' edit_rassilka_m'] = await bot.send_message(call.message.chat.id, f'<b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞</b>\n–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: 0/{len(text)}üëæ', reply_markup=markups.stop_newssender)
		for i in range(len(text)):
			try:
				if newssender_state == False:
					await call.message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ !')
					await bot.delete_message(call.message.chat.id, msg[str(call.message.chat.id) + ' edit_rassilka_m'].message_id)
					media_post_message_static['button_link_m'] = ""
					media_post_message_static['button_name_m'] = ""
					media_post_message_static['photo_id'] = ""
					media_post_message_static['text_m'] = ""
					return
				await bot.send_photo(text[i], photo=open("post.png", "rb"), caption=media_post_message_static['text_m'], reply_markup=m)
				await msg[str(call.message.chat.id) + ' edit_rassilka_m'].edit_text(f'<b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞</b>\n–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {i}/{len(text)}üëæ', reply_markup=markups.stop_newssender)
				print('–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ' + text[i])
			except Exception as e:
				print(e)
				if str(e) == "Can't parse inline keyboard button: text buttons are unallowed in the inline keyboard":
					await bot.send_message(text[i], media_post_message_static['text_m'])
					await msg[str(call.message.chat.id) + ' edit_rassilka_m'].edit_text(f'<b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞</b>\n–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {i}/{len(text)}üëæ', reply_markup=markups.stop_newssender)
					print('–£–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ' + text[i])
				elif "wrong http url" in str(e):
					await call.message.answer('–°—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞‚ùå')
					await bot.delete_message(call.message.chat.id, msg[str(call.message.chat.id) + ' edit_rassilka_m'].message_id)
					return
				elif "Message text is empty" in str(e):
					await call.message.answer('–¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º‚ùå')
					await bot.delete_message(call.message.chat.id, msg[str(call.message.chat.id) + ' edit_rassilka_m'].message_id)
					return
				continue
		baza.close()
		media_post_message_static['button_link_m'] = ""
		media_post_message_static['button_name_m'] = ""
		media_post_message_static['photo_id'] = ""
		media_post_message_static['text_m'] = ""
	#=============================================================	
	
	
	
	
	
	
	#=========================== STOP NEWSSENDER =================
	
	elif call_data == "stop_newssender":
		newssender_state = False
		
	#=============================================================	
	
	
	
	
	
	#============================= REQUESTS =======================
	else:
		await bot.edit_message_text(
			chat_id=call.message.chat.id,
			message_id=call.message.message_id,
			text=f"{call.message.text}\n–í–∑—è–ª –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É: {call.from_user.first_name}")

		
	#=============================================================	
	
		

		
#=============== TEXT POST FORM =================
@dp.message_handler(state=text_post_message.text)
async def text_tpost_field(message: types.Message, state: FSMContext):
	async with state.proxy() as data:
		data['text'] = message.text
		text_post_message_static['text'] = data['text']
		try:
			await msg[str(message.chat.id)+" edit"].edit_text(text=data['text']
															  + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {text_post_message_static['button_name']}"
															  + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {text_post_message_static['button_link']}",
															  reply_markup=markups.text_post)
		except:
			await msg[str(message.chat.id)+" edit"].edit_text(text=data['text'], reply_markup=markups.text_post)
	
	try:
		await bot.delete_message(message.chat.id, msg[message.chat.id].message_id)
		await bot.delete_message(message.chat.id, message.message_id)
	except:
		pass
	await state.finish()
	
	
	
@dp.message_handler(state=text_post_message.button_name)
async def button_name_tpost_field(message: types.Message, state: FSMContext):
	async with state.proxy() as data:
		data['button_name'] = message.text
		text_post_message_static['button_name'] = data['button_name']
		try:
			await msg[str(message.chat.id)+" edit"].edit_text(text=text_post_message_static['text']
															  + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {data['button_name']}", 
															  reply_markup=markups.text_post)
			msg[str(message.chat.id)+" edit"].text = msg[str(message.chat.id)+" edit"].text + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {message.text}"
		except:
			await msg[str(message.chat.id)+" edit"].edit_text(text=msg[str(message.chat.id)+" edit"].text
												  + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {data['button_name']}", 
												  reply_markup=markups.text_post)
			msg[str(message.chat.id)+" edit"].text = msg[str(message.chat.id)+" edit"].text + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {message.text}"
	try:
		await bot.delete_message(message.chat.id, msg[message.chat.id].message_id)
		await bot.delete_message(message.chat.id, message.message_id)
	except:
		pass
	msg[message.chat.id] = await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏: ")
	await text_post_message.button_link.set()
	
	
	
@dp.message_handler(state=text_post_message.button_link)
async def button_link_tpost_field(message: types.Message, state: FSMContext):
	async with state.proxy() as data:
		data['button_link'] = message.text
		text_post_message_static['button_link'] = data['button_link']
		try:
			await msg[str(message.chat.id)+" edit"].edit_text(text=text_post_message_static['text'] 
															  + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {text_post_message_static['button_name']}"
															  + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {data['button_link']}", 
															  reply_markup=markups.text_post)
		except Exception as e:
			print(e)
			await msg[str(message.chat.id)+" edit"].edit_text(text=msg[str(message.chat.id) + " edit"].text
												  + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {data['button_link']}", 
												  reply_markup=markups.text_post)
	try:
		await bot.delete_message(message.chat.id, msg[message.chat.id].message_id)
		await bot.delete_message(message.chat.id, message.message_id)
	except:
		pass
	await state.finish()

#=============================================================		
		
		
		


#=============== MEDIA POST FORM =================
@dp.message_handler(state=media_post_message.text)
async def text_mpost_field(message: types.Message, state: FSMContext):
	async with state.proxy() as data:
		data['text_m'] = message.text
		media_post_message_static['text_m'] = data['text_m']


		try:
			file_except1 = InputMedia(media=InputFile("post.png"), caption=media_post_message_static['text_m']
																		   + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {media_post_message_static['button_name_m']}"
																		   + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {media_post_message_static['button_link_m']}")
			await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except1,
															  reply_markup=markups.media_post)
			msg[str(message.chat.id) + " edit_m"].caption = msg[
															 str(message.chat.id) + " edit_m"].caption
		except Exception as e:
			print(e)
			file_except2 = InputMedia(media=InputFile("post.png"), caption=data['text_m'])
			await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except2,
															  reply_markup=markups.media_post)
			msg[str(message.chat.id) + " edit_m"].caption = msg[
															str(message.chat.id) + " edit_m"].caption
	try:
		await bot.delete_message(message.chat.id, msg[message.chat.id].message_id)
		await bot.delete_message(message.chat.id, message.message_id)
	except:
		pass
	await state.finish()
	
	
	
@dp.message_handler(state=media_post_message.button_name)
async def button_name_mpost_field(message: types.Message, state: FSMContext):
	async with state.proxy() as data:
		data['button_name_m'] = message.text
		media_post_message_static['button_name_m'] = data['button_name_m']

		try:
			file_except1 = InputMedia(media=InputFile("post.png"), caption=data['text_m']
																		   + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {media_post_message_static['button_name_m']}")
			await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except1,
															  reply_markup=markups.media_post)
			msg[str(message.chat.id)+" edit_m"].caption = msg[str(message.chat.id)+" edit_m"].caption + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {message.text}"
		except:
			file_except2 = InputMedia(media=InputFile("post.png"), caption=msg[str(message.chat.id) + " edit_m"].caption
																		   + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {data['button_name_m']}")
			await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except2,
															  reply_markup=markups.media_post)
			msg[str(message.chat.id)+" edit_m"].caption = msg[str(message.chat.id)+" edit_m"].caption + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {message.text}"
	try:
		await bot.delete_message(message.chat.id, msg[message.chat.id].message_id)
		await bot.delete_message(message.chat.id, message.message_id)
	except:
		pass
	msg[message.chat.id] = await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏: ")
	await media_post_message.button_link.set()
	
	
	
@dp.message_handler(state=media_post_message.button_link)
async def button_link_mpost_field(message: types.Message, state: FSMContext):
	async with state.proxy() as data:
		data['button_link_m'] = message.text
		media_post_message_static['button_link_m'] = data['button_link_m']

		try:

			file_except1 = InputMedia(media=InputFile("post.png"), caption=media_post_message_static['text_m']
																		   + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {media_post_message_static['button_name_m']}"
																		   + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {data['button_link']}")
			await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except1,
															  reply_markup=markups.media_post)
		except Exception as e:
			file_except2 = InputMedia(media=InputFile("post.png"), caption=msg[str(message.chat.id) + " edit_m"].caption
																		   + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {data['button_link_m']}")
			print(e)
			await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except2,
															  reply_markup=markups.media_post)

	try:
		await bot.delete_message(message.chat.id, msg[message.chat.id].message_id)
		await bot.delete_message(message.chat.id, message.message_id)
	except:
		pass
	await state.finish()


@dp.message_handler(content_types=types.ContentType.PHOTO, state=media_post_message.photo_id)
async def process_photo(message: types.Message, state: FSMContext):
	photo_id = message.photo[-1].file_id
	async with state.proxy() as data:
		data['photo_id'] = photo_id
		photo = await bot.get_file(data['photo_id'])
		await photo.download(f"post.png")
		try:

			file_except1 = InputMedia(media=InputFile("post.png"), caption=media_post_message_static['text_m']
																		   + f"\n\n–ù–ê–ó–í–ê–ù–ò–ï –ö–ù–û–ü–ö–ò: {media_post_message_static['button_name_m']}"
																		   + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {data['button_link']}")
			await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except1,
															  reply_markup=markups.media_post)
		except Exception as e:
			print(e)
			try:
				file_except2 = InputMedia(media=InputFile("post.png"), caption=msg[str(message.chat.id) + " edit_m"].caption
																			   + f"\n–°–°–´–õ–ö–ê –ö–ù–û–ü–ö–ò: {data['button_link_m']}")

				await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except2,
																  reply_markup=markups.media_post)
			except Exception as e:
				print(e)
				file_except3 = InputMedia(media=InputFile("post.png"), caption=media_post_message_static['text_m'])
				await msg[str(message.chat.id)+" edit_m"].edit_media(media=file_except3,
																  reply_markup=markups.media_post)
	try:
		await bot.delete_message(message.chat.id, msg[message.chat.id].message_id)
		await bot.delete_message(message.chat.id, message.message_id)
	except:
		pass
	msg[message.chat.id] = await message.answer("–§–æ—Ç–æ –ø–æ—Å—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
	await state.finish()



#=============================================================		
		
		

		
		
		
async def main(_):
	#---------------
	#–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞!
	for i in admin_id:
		await bot.send_message(i, text='<b>–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è:</b>\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')
	print("bot started")

if __name__ == '__main__':
	#---------------
	#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
	print('–£—Å–ø–µ—à–Ω–æ c–æ–µ–¥–µ–Ω–µ–Ω–æ')
	executor.start_polling(dp, skip_updates=True, on_startup=main)

